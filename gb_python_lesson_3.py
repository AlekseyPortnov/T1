'''=========================================================================
1. Реализовать функцию, принимающую два числа (позиционные аргументы) 
и выполняющую их деление. Числа запрашивать у пользователя, предусмотреть 
обработку ситуации деления на ноль.
============================================================================'''
def div_two_nums(a, b):
    if b != 0:
        return a/b
    else:
        return 'Нельзя делить на ноль!!!!!'

a = float(input(f'Введите делимое: '))
b = float(input(f'Введите делитель: '))
print(div_two_nums(a, b))
'''=========================================================================
2. Выполнить функцию, которая принимает несколько параметров, описывающих 
данные пользователя: имя, фамилия, год рождения, город проживания, email, 
телефон. Функция должна принимать параметры как именованные аргументы. 
Осуществить вывод данных о пользователе одной строкой.
============================================================================'''
def data_base(name, year, city, email, tel):
    return print(f'\nName = {name};  \nYear = {year}; \nCity = {city}; \nemail = {email}; \nTel = {tel}')

data_base(city = 'Penza', tel = 89093154728, name = 'Aleksey', email = 'portnovdna@gmail.com', year = 1980)
'''=========================================================================
3. Реализовать функцию my_func(), которая принимает три позиционных аргумента 
и возвращает сумму наибольших двух аргументов.
============================================================================'''
def my_func(a, b, c):
    if (c < a) and (c < b):
        return print(a + b)
    elif (a < b) and (a < c):
        return print(b + c)
    elif (b < a) and (b < c):
        return print(a + c)
    else:
        return print(a * 2)

my_func(4,2,3)
'''=========================================================================
4. Программа принимает действительное положительное число x и целое 
отрицательное число y. Выполните возведение числа x в степень y. 
Задание реализуйте в виде функции my_func(x, y). 
При решении задания нужно обойтись без встроенной функции возведения числа в 
степень.

Подсказка: попробуйте решить задачу двумя способами. Первый — возведение в 
степень с помощью оператора **. Второй — более сложная реализация без 
оператора **, предусматривающая использование цикла.
============================================================================'''
def my_func(x, y):
    return x ** abs(y)

print(my_func(2, -3))
#---------------------------------------------------------------------------
def my_func(x, y):
    z = 1
    cnt = 0
    if y == 0:
        return 1
    for i in range(abs(y)):
        z = z * x
        cnt += 1 
    print(f'cnt = {cnt}')
    return z

print(my_func(2, -8))
'''=========================================================================
5. Программа запрашивает у пользователя строку чисел, разделённых пробелом. 
При нажатии Enter должна выводиться сумма чисел. Пользователь может продолжить 
ввод чисел, разделённых пробелом и снова нажать Enter. Сумма вновь введённых 
чисел будет добавляться к уже подсчитанной сумме.
Но если вместо числа вводится специальный символ, выполнение программы 
завершается. Если специальный символ введён после нескольких чисел, 
то вначале нужно добавить сумму этих чисел к полученной ранее сумме 
и после этого завершить программу.
============================================================================'''
def my_sum(stroka):
    s = list(stroka)
    global v_sum
    for i in s:
        if i == 'q':
            return True
        elif i != ' ':
            v_sum = v_sum + int(i) 
        
v_sum = 0        
res = False        
while True:
    nums = input(f'Введите числа через пробел, выход q -> ')
    res = my_sum(nums)
    print(f'Сумма = {v_sum}')
    if res:
        break
'''=========================================================================
6. Реализовать функцию int_func(), принимающую слова из маленьких латинских 
букв и возвращающую их же, но с прописной первой буквой.
Например, print(int_func(‘text’)) -> Text.
============================================================================'''
def int_func(text):
    return text.title()
print(int_func('text'))
'''=========================================================================
7. Продолжить работу над заданием. В программу должна попадать строка из слов,
 разделённых пробелом. Каждое слово состоит из латинских букв в нижнем 
 регистре. Нужно сделать вывод исходной строки, но каждое слово должно 
 начинаться с заглавной буквы. Используйте написанную ранее функцию int_func().
============================================================================'''
def int_func(text):
    return text.title()
print(int_func('text text text text one two three four five six seven'))